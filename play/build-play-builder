#!/usr/bin/env ruby

require "./helpers.rb"

PROJECTS_TO_BUILD = %w(flowcommerce/experience flowcommerce/catalog flowcommerce/label flowcommerce/shopify flowcommerce/webhook flowcommerce/demandware flowcommerce/harmonization flowcommerce/tax flowcommerce/order-messenger flowcommerce/bundle flowcommerce/metric flowcommerce/shopify-markets flowcommerce/calculator)

play_tag = ARGV.shift.to_s.strip
java_tag = ARGV.shift.to_s.strip

if play_tag == "" || java_tag == ""
  puts "Usage: ./build-play-builder $(sem-info tag latest) <8 or 13>"
  puts "ERROR: Missing play tag or java tag."
  exit(1)
end

play_builder_image_tag = "flowdocker/play_builder:#{play_tag}-java#{java_tag}"
play_builder_image_latest = "flowdocker/play_builder:latest-java#{java_tag}"

refresh_build_caches = true

puts ""
puts "Starting build of %s" % play_builder_image_tag

if refresh_build_caches

  base_dir = File.expand_path(File.join(File.dirname(__FILE__), '/../../docker-build-play-builder.tmp'))
  run("rm -rf #{base_dir}")

  run("rm -rf $HOME/.sbt")
  run("rm -rf $HOME/.coursier/cache/v1") 
  run("rm -rf $HOME/Library/Caches/Coursier/v1/")
  
  run("mkdir -p #{base_dir}")

  PROJECTS_TO_BUILD.map do |pair|
    repo, project = pair.split("/", 2)
    if project.nil?
      raise "Project[%s] could not be parsed" % pair
    end
    dir = File.join(base_dir, project)

    puts ""
    puts "Getting depedencies #{pair} in #{dir}"
    Dir.chdir(base_dir) do
      run("git clone --depth 1 https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/#{pair}.git")
    end

    Dir.chdir(dir) do
      run("sbt update")
    end
  end

end

# Build in a tmp directory to avoid adding anything unnecessary into
# the context.
tmp_dir = "/tmp/docker.play.#{Process.pid}"
begin
  run("mkdir #{tmp_dir}")
  run("cp Dockerfile.play_builder-#{java_tag} #{tmp_dir}/Dockerfile")

  Dir.chdir(tmp_dir) do
    run("cp -R $HOME/.sbt .")
    if File.directory?(ENV["HOME"]+"/Library/Caches/Coursier/v1")
      run("cp -R $HOME/Library/Caches/Coursier/v1 ./.coursier")
    elsif File.directory?(ENV["HOME"]+"/.cache/coursier/v1")
      run("cp -R $HOME/.cache/coursier/v1 ./.coursier")
    else
      puts "coursier directory not found. Exiting"
      exit(1)
    end
    run("docker build --pull --no-cache -t %s ." % play_builder_image_tag)
  end

  run("docker tag #{play_builder_image_tag} #{play_builder_image_latest}")
  run("docker push #{play_builder_image_tag}")
  run("docker push #{play_builder_image_latest}")
ensure
  run("rm -rf #{tmp_dir}")
end

puts ""
puts "Completed build of %s" % play_builder_image_tag
