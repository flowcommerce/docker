#!/usr/bin/env ruby

# Ex:
#
# ./build-node <docker_image_version>
#
# ./build-node 0.2.0

require "./helpers.rb"

node_tag = ARGV.shift.to_s.strip
node_version = ARGV.shift.to_s.strip

if node_tag == ""
  puts "ERROR: Missing node tag"
  exit(1)
end

if node_version == ""
  puts "ERROR: Missing node version"
  exit(1)
end

node_image_tag = "flowdocker/node%s:%s" % [node_version, node_tag]
node_image_latest = "flowdocker/node%s:latest" % node_version

env_provider = get_env_providor_location

puts "Fetching latest version number for #{env_provider}"
env_provider_version = Dir.chdir(env_provider) do
  run("git fetch --tags")
  `sem-info tag latest`.strip
end

puts "env_provider_version: #{env_provider_version}"

# Build in a tmp directory to avoid adding anything unnecessary into
# the context.
tmp_dir = "/tmp/docker.node#{node_version}.#{Process.pid}"
begin
  run("mkdir #{tmp_dir}")
  run("cp Dockerfile.node#{node_version} #{tmp_dir}/Dockerfile")

  Dir.chdir(tmp_dir) do
    run("echo '#{env_provider_version}' > environment-provider-version.txt")
    run("curl https://cdn.flow.io/util/environment-provider/environment-provider_2.12-#{env_provider_version}-one-jar.jar > ./environment-provider.jar")
    run("aws s3 cp s3://io.flow.infra/npm/flowtech.npmrc ./.npmrc")
    run("docker build --platform linux/amd64 --no-cache -t %s ." % node_image_tag, true)
  end

  run("docker tag #{node_image_tag} #{node_image_latest}")
  run("docker push %s" % node_image_tag)
  run("docker push %s" % node_image_latest)
  puts ""
  puts "Completed push of #{node_image_tag} and #{node_image_latest}"

rescue StandardError => e
  puts e.message
ensure
  run("rm -rf #{tmp_dir}")
end
